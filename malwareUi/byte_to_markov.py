def byte_to_markov_convertor(byte_file):
    freq = np.zeros((256,256),dtype=float)
    with open(byte_file,'r',encoding="utf-8") as file:
        p=file.read()
    temp=p.split("\n")
    final=[]
    for item in temp:
        final.extend(item.split(" ")[1:]) 
    len_final=len(final)
    for i in range(len_final-1):
        if(final[i]!='??' and final[i+1]!='??'):
            freq[int(final[i], 16)][int(final[i+1], 16)]+=1
        else:
            pass
    
    # Laplacian Correction
    freq += 1e-6
    prob = freq/freq.sum(axis=1)[:,None]
    return prob
